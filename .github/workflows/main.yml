name: Doxygen Documentation Automation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  generate-docs:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set Git Config
      - name: Set Git Configuration
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions Bot"

      # Generate Doxygen Configuration File
      - name: Generate Doxygen Configuration
        run: |
          doxygen -g
          sed -i 's/PROJECT_NAME.*/PROJECT_NAME = "Example C Project"/' Doxyfile
          sed -i 's|INPUT.*|INPUT = ./main.c|' Doxyfile
          sed -i 's/GENERATE_HTML.*/GENERATE_HTML = YES/' Doxyfile
          sed -i 's/GENERATE_LATEX.*/GENERATE_LATEX = YES/' Doxyfile
          sed -i 's/HAVE_DOT.*/HAVE_DOT = YES/' Doxyfile
      # Install Graphviz and Generate Documentation
      - name: Install Graphviz and Generate Documentation
        run: |
          sudo apt-get install graphviz -y
          doxygen Doxyfile

      # Create gh-pages Branch (if not exists)
      - name: Ensure gh-pages Branch
        run: |
          if [ "$(git branch --list gh-pages)" == "" ]; then
            git checkout -b gh-pages
          else
            git branch -D gh-pages
          fi

        # Step 6: Commit and Force Push to gh-pages
      - name: Commit and Push to gh-pages
        run: |
          git push --force origin gh-pages

      #  Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html/
